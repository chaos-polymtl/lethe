# SPDX-FileCopyrightText: Copyright (c) 2022-2024 The Lethe Authors
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception OR LGPL-2.1-or-later

#############################################################################
"""
Postprocessing code for rayleigh-benard-convection example
"""
#############################################################################

'''Importing Libraries'''
import numpy as np
import matplotlib.pyplot as plt
import pyvista as pv
import argparse
import os
import re
import warnings

#############################################################################

#Functions to read the data from the reference files
def get_last_file(directory):

    #Check if the directory exists
    if not os.path.isdir(directory):
        print(f"Directory '{directory}' not found")
        return None

    # Create the regular expression pattern for the data files
    pattern = re.compile(r"rayleigh-benard_convection\.(\d+)\.00000\.vtu")

    # Get a list of the files
    files = [
        f for f in os.listdir(directory) 
        if os.path.isfile(os.path.join(directory, f)) and pattern.match(f)
    ]
    
    # Check if any files were found
    if not files:
        print(f"No .vtu files found in '{directory}' matching the regex pattern.")
        return None  

    # Sort files by modification time
    sorted_files = sorted(files, key=lambda x: int(x.split('.')[1]))
    
    # Return the most recently modified file with the given extension
    return sorted_files[-1]

#############################################################################


#Data from Ouertatani, Cheikh, Beya, Lili (2008) for Ra= 10^4
x_ref_Ouertatani_10k = [0.000800640512409928,0.00960768614891914,0.0168134507606085,0.0256204963971177,0.0344275420336269,0.044035228182546,0.0544435548438751,0.0640512409927942,0.0760608486789432,0.0880704563650921,0.100080064051241,0.11369095276221,0.127301841473179,0.140912730184147,0.155324259407526,0.170536429143315,0.185748598879103,0.203362690152122,0.21857485988791,0.236188951160929,0.254603682946357,0.273819055244195,0.292233787029624,0.311449159327462,0.3306645316253,0.349879903923139,0.371497197758207,0.392313851080865,0.412329863891113,0.433146517213771,0.453963170536429,0.476381104883907,0.497998398718975,0.519615692554043,0.540432345876701,0.562850280224179,0.582866293034428,0.602882305844676,0.624499599679744,0.645316253002402,0.66453162530024,0.685348278622898,0.703763010408327,0.722978382706165,0.740592473979183,0.759007205764612,0.77662129703763,0.792634107285829,0.809447558046437,0.825460368294636,0.841473178542834,0.856685348278623,0.870296236989592,0.88390712570056,0.897518014411529,0.911128903122498,0.919935948759007,0.933546837469976,0.944755804643715,0.953562850280224,0.963971176941553,0.973578863090472,0.981585268214572,0.990392313851081,0.99679743795036]
y_ref_Ouertatani_10k = [-0.00088809946714032, 0.00532859680284192, 0.0133214920071048, 0.022202486678508, 0.0328596802841918, 0.0426287744227354, 0.0506216696269982, 0.0612788632326821, 0.0746003552397869, 0.0870337477797513, 0.0976909413854352, 0.11101243339254, 0.124333925399645, 0.13854351687389, 0.153641207815275, 0.168738898756661, 0.184724689165187, 0.200710479573712, 0.217584369449378, 0.235346358792185, 0.252220248667851, 0.271758436944938, 0.291296625222025, 0.309946714031972, 0.329484902309059, 0.348134991119005, 0.369449378330373, 0.390763765541741, 0.412078152753108, 0.432504440497336, 0.454706927175844, 0.475133214920071, 0.497335701598579, 0.518650088809947, 0.539076376554174, 0.560390763765542, 0.58259325044405, 0.603907637655417, 0.623445825932504, 0.644760213143872, 0.6651865008881, 0.683836589698046, 0.704262877442274, 0.723801065719361, 0.740674955595027, 0.759325044404973, 0.77708703374778, 0.792184724689165, 0.809946714031972, 0.825932504440497, 0.841030195381883, 0.857904085257549, 0.871225577264654, 0.884547069271759, 0.897868561278863, 0.911190053285968, 0.921847246891652, 0.935168738898757, 0.94404973357016, 0.953818827708703, 0.965364120781528, 0.974245115452931, 0.984014209591474, 0.990230905861457, 1]
x_vel_Ouertatani_10k = [-0.000647249190938504, -0.0213592233009709, -0.0433656957928803, -0.0666666666666667, -0.0899676375404531, -0.111974110032362, -0.133333333333333, -0.154045307443366, -0.171521035598706, -0.187702265372168, -0.202588996763754, -0.214886731391586, -0.226537216828479, -0.236893203883495, -0.244012944983819, -0.248543689320388, -0.251132686084142, -0.250485436893204, -0.249838187702265, -0.245307443365696, -0.238834951456311, -0.229126213592233, -0.218770226537217, -0.205177993527508, -0.188996763754045, -0.170226537216829, -0.150809061488673, -0.128802588996764, -0.106148867313916, -0.0815533980582525, -0.0563106796116505, -0.0304207119741101, -0.00258899676375407, 0.0233009708737864, 0.0498381877022653, 0.0757281553398058, 0.0996763754045307, 0.123624595469256, 0.146278317152104, 0.165695792880259, 0.184466019417476, 0.200647249190938, 0.214886731391586, 0.226537216828479, 0.236893203883495, 0.244660194174757, 0.248543689320388, 0.252427184466019, 0.251779935275081, 0.250485436893204, 0.245954692556634, 0.238834951456311, 0.229773462783171, 0.218770226537217, 0.205825242718447, 0.191585760517799, 0.176051779935275, 0.157281553398058, 0.137864077669903, 0.117799352750809, 0.0957928802588997, 0.0744336569579288, 0.0504854368932039, 0.0271844660194175, 0.00194174757281551]
y_vel_Ouertatani_10k = [-0.00039564787339263496,0.023343224530168183,0.04787339268051438,0.07240356083086058,0.09851632047477749, 0.12383778437190907, 0.1452027695351138, 0.1673590504451039, 0.18793273986152326, 0.20613254203758657, 0.22116716122650848, 0.2354104846686449, 0.24727992087042538, 0.25598417408506435, 0.25994065281899115, 0.26310583580613256, 0.2623145400593472, 0.25994065281899115, 0.2536102868447082, 0.24490603363006924, 0.23303659742828886, 0.22116716122650848, 0.2053412462908012, 0.18872403560830864, 0.1713155291790307, 0.152324431256182, 0.13254203758654803, 0.11196834817012857,0.09060336300692384,0.06844708209693373,0.047082096933729,0.02571711177052427,0.0011869436201780714, -0.02096933728981204, -0.042334322453016826, -0.06369930761622156, -0.08664688427299705, -0.1072205736894164, -0.12858555885262118, -0.14757665677546983, -0.1681503461918892, -0.1847675568743818, -0.2029673590504451, -0.2172106824925816, -0.23066271018793275, -0.24253214638971315, -0.2536102868447082, -0.25914935707220577, -0.2623145400593472, -0.26468842729970327, -0.2623145400593472, -0.257566765578635, -0.2504451038575668, -0.237784371909001, -0.22670623145400595, -0.21088031651829872, -0.19347181008902078, -0.17289812067260138, -0.152324431256182, -0.1301681503461919, -0.10642927794263107,-0.08189910979228487,-0.056577645895153295,-0.03046488625123639,-0.0027695351137487223]

#Data from Ouertatani, Cheikh, Beya, Lili (2008) for Ra= 10^6
x_ref_Ouertatani_1M = [0,0.00802568218298555,0.0152487961476726,0.0240770465489567,0.0337078651685393,0.0425361155698234,0.0529695024077047,0.0634028892455859,0.0746388443017657,0.0874799357945425,0.0995184590690209,0.113162118780096,0.126003210272873,0.139646869983949,0.154895666131621,0.170144462279294,0.185393258426966,0.202247191011236,0.218298555377207,0.235955056179775,0.254414125200642,0.27207062600321,0.291332263242376,0.31139646869984,0.330658105939005,0.350722311396469,0.369983948635634,0.390850722311396,0.41091492776886,0.432584269662921,0.455056179775281,0.475120385232745,0.495987158908507,0.518459069020867,0.540128410914928,0.561797752808989,0.582664526484751,0.602728731942215,0.624398073836276,0.64446227929374,0.665329052969502,0.684590690208668,0.703852327447833,0.723113964686998,0.741573033707865,0.760032102728732,0.776886035313002,0.793739967897271,0.81139646869984,0.827447833065811,0.841894060995185,0.856340288924559,0.869983948635634,0.88362760834671,0.896468699839486,0.909309791332263,0.92215088282504,0.931781701444623,0.943820224719101,0.954253611556982,0.964686998394864,0.974317817014446,0.983948635634029,0.991974317817014,0.998394863563403]
y_ref_Ouertatani_1M = [0.000885739592559787, 0.0070859167404783, 0.0159433126660762, 0.0230292294065545, 0.0336581045172719, 0.0442869796279894, 0.0531443755535872, 0.0637732506643047, 0.0744021257750221, 0.0859167404782994, 0.0992028343666962, 0.111603188662533, 0.12488928255093, 0.139946855624446, 0.155890168290523, 0.170062001771479, 0.185119574844996, 0.201062887511072, 0.218777679362268, 0.236492471213463, 0.254207263064659, 0.272807794508415, 0.29140832595217, 0.310894596988485, 0.329495128432241, 0.349867139061116, 0.370239149689991, 0.391496899911426, 0.411868910540301, 0.433126660761736, 0.453498671390611, 0.474756421612046, 0.496014171833481, 0.520814880425155, 0.54030115146147, 0.561558901682905, 0.58193091231178, 0.604074402125775, 0.62356067316209, 0.643932683790966, 0.6651904340124, 0.684676705048716, 0.703277236492471, 0.723649247121346, 0.741364038972542, 0.759964570416298, 0.777679362267493, 0.794508414526129, 0.811337466784765, 0.825509300265722, 0.841452612931798, 0.855624446412755, 0.871567759078831, 0.884853852967228, 0.898139946855625, 0.911426040744021, 0.922940655447299, 0.933569530558016, 0.943312666076174, 0.955713020372011, 0.965456155890168, 0.974313551815766, 0.984942426926484, 0.993799822852082, 1]
x_vel_Ouertatani_1M = [0.000970088924818091, -0.0682295877122069, -0.138075990299111, -0.196928051738076, -0.246725949878739, -0.284882780921585, -0.315925626515764, -0.340501212611156, -0.356669361358125, -0.365723524656427, -0.368310428455942, -0.363783346806791, -0.352142279708973, -0.335974130962005, -0.315278900565885, -0.291996766370251, -0.270008084074374, -0.248019401778496, -0.229264349232013, -0.211156022635408, -0.193694421988682, -0.176879547291835, -0.162004850444624, -0.147130153597413, -0.131608730800323, -0.116087308003234, -0.0999191592562652, -0.0843977364591754, -0.0682295877122069, -0.0527081649151172, -0.03589329021827, -0.0184316895715441, -0.00161681487469684, 0.0139046079223929, 0.0326596604688763, 0.048181083265966, 0.0649959579628133, 0.0811641067097818, 0.0966855295068715, 0.11285367825384, 0.129021827000808, 0.143249797898141, 0.158124494745352, 0.17429264349232, 0.18981406628941, 0.207275666936136, 0.225383993532741, 0.244139046079224, 0.264834276475344, 0.287469684721099, 0.310105092966855, 0.331447049312854, 0.348261924009701, 0.361843168957154, 0.368957154405821, 0.368310428455942, 0.361196443007276, 0.346321746160065, 0.32303961196443, 0.294583670169766, 0.258367016976556, 0.212449474535166, 0.154244139046079, 0.0863379143088117, 0.0106709781729992]
y_vel_Ouertatani_1M = [0, 0.0870425321463897, 0.178832838773492, 0.260336300692384, 0.326013847675569, 0.372700296735905, 0.397230464886251, 0.40435212660732, 0.398813056379822, 0.382987141444115, 0.363204747774481, 0.342631058358061, 0.322057368941642, 0.302274975272008, 0.281701285855589, 0.264292779426311, 0.246092977250247, 0.229475766567755, 0.214441147378833, 0.198615232443126, 0.182789317507418, 0.168545994065282, 0.15351137487636, 0.139268051434224, 0.123442136498516, 0.110781404549951, 0.094164193867458, 0.0783382789317508, 0.0648862512363996, 0.0498516320474778, 0.0348170128585559, 0.0181998021760633, 0.00237388724035609, -0.0142433234421365, -0.0292779426310583, -0.0435212660731948, -0.0609297725024728, -0.0759643916913946, -0.0909990108803165, -0.106033630069238, -0.12106824925816, -0.135311572700297, -0.150346191889219, -0.164589515331355, -0.180415430267062, -0.194658753709199, -0.211275964391691, -0.225519287833828, -0.242136498516321, -0.259545004945598, -0.276953511374876, -0.29515331355094, -0.316518298714144, -0.336300692383778, -0.358456973293769, -0.379030662710188, -0.395647873392681, -0.40435212660732, -0.401978239366963, -0.379821958456973, -0.33946587537092, -0.278536102868447, -0.200197823936696, -0.109990108803165, -0.0126607319485658]

#Take case path as argument and store it
parser = argparse.ArgumentParser(description='Arguments for the validation of the rayleigh-benard-convection example')
parser.add_argument("--validate", action="store_true", help="Launches the script in validation mode. This will log the content of the graph and prevent the display of figures", default=False)
parser.add_argument("-f", "--folder", action='append', type=str, help="Path to the output folder. This is the folder that contains the results of the simulations (.vtu, .pvtu, .dat and .pvd files). Multiple folder can be added for different Ra number.", required=True)
parser.add_argument("-Ra", "--Rayleigh", action='append', type=str, help='Rayleigh number of the folder in the same order. At the moment, the only options are "10k" and "1M".', required=True)
args, leftovers=parser.parse_known_args()

#Check if the parameters match
if len(args.folder) != len(args.Rayleigh):
  raise ValueError('The number of folders and Rayleigh numbers should be the same.')


#Create the figure for u, y plot
fig0 = plt.figure()
ax0 = fig0.add_subplot(111)
ax0.set_ylabel(r'$y$')
ax0.set_xlabel(r'$u$')
ax0.set_xlim(-0.5,0.5)
ax0.set_ylim(0,1)
ax0.set_aspect('equal')

#Create the figure for x, v plot
fig1 = plt.figure()
ax1 = fig1.add_subplot(111)
ax1.set_ylabel(r'$v$')
ax1.set_xlabel(r'$x$')
ax1.set_xlim(0,1)
ax1.set_ylim(-0.5,0.5)
ax1.set_aspect('equal')

#Get data from the reference files
output_dirs =args.folder

#Loop on all the folders
for idx, output_dir in enumerate(output_dirs):

  #Load the data from the result folder
  filename = output_dir + "/"+ get_last_file(output_dir)
  sim = pv.read(filename)
  sim.set_active_vectors("velocity")

  #Extract the data on the middle line in x and y direction
  a = [-0.5,0,0]
  b = [0.5,0,0]
  sampled_data_x = sim.sample_over_line(a, b, resolution=100)

  a = [0,-0.5,0]
  b = [0,0.5,0]
  sampled_data_y = sim.sample_over_line(a, b, resolution=100)

  #Get the position and the velocity of the simulation
  x = sampled_data_x["Distance"]
  y = sampled_data_y["Distance"]
  u = sampled_data_y["velocity"][:,0]
  v = sampled_data_x["velocity"][:,1]

  #Get associate Ra number
  Ra = args.Rayleigh[idx]

  if Ra == "10k":

    #Normalize the velocity by the characteristic velocity u_char = sqrt(g*L*beta*(T_h-T_c))
    u_char = np.sqrt(10*1*0.71*10)
    u /= u_char
    v /= u_char
    warnings.warn(r"Make sure that the characteristic velocity $u_{char} = \sqrt{g*L*beta*(T_h-T_c)}$ is correct according to the prm file parameters. Default is $\sqrt{71}$ for Ra=10^4$.")

    #Plot the data
    ax0.plot(-u, y, lw=2, label="Lethe, Ra=10k")
    ax0.plot(x_vel_Ouertatani_10k,y_ref_Ouertatani_10k, 's',ms=8,mfc="None",markeredgecolor="black",label="Ouertatani 2008, Ra=10k")

    ax1.plot(x, -v, lw=2, label="Lethe, Ra=10k")
    ax1.plot(x_ref_Ouertatani_10k, y_vel_Ouertatani_10k, 's',ms=8,mfc="None",markeredgecolor="black",label="Ouertatani 2008, Ra=10k")

    if (args.validate):
      solution = np.column_stack((u, y))
      np.savetxt("solution-rayleigh_10k-uy.dat",solution, header="u y")

      solution = np.column_stack((x, v))
      np.savetxt("solution-rayleigh_10k-xv.dat",solution, header="x v")

  elif Ra == "1M":

    #Normalize the velocity by the characteristic velocity u_char = sqrt(g*L*beta*(T_h-T_c))
    u_char = np.sqrt(10*1*71*10)
    u /= u_char
    v /= u_char
    warnings.warn(r"Make sure that the characteristic velocity $u_{char} = \sqrt{g*L*beta*(T_h-T_c)}$ is correct according to the prm file parameters. Default is $\sqrt{7100} for Ra=10^6$.")

    #Plot the data
    ax0.plot(-u, y, lw=2, label="Lethe, Ra=1M")
    ax0.plot(x_vel_Ouertatani_1M,y_ref_Ouertatani_1M, 'o',ms=8,mfc="None",markeredgecolor="black",label="Ouertatani 2008, Ra=1M")

    ax1.plot(x, -v, lw=2, label="Lethe, Ra=1M")
    ax1.plot(x_ref_Ouertatani_1M, y_vel_Ouertatani_1M, 'o',ms=8,mfc="None",markeredgecolor="black",label="Ouertatani 2008, Ra=1M")

    if (args.validate):
      solution = np.column_stack((u, y))
      np.savetxt("solution-rayleigh_1M-uy.dat",solution, header="u y")

      solution = np.column_stack((x, v))
      np.savetxt("solution-rayleigh_1M-xv.dat",solution, header="x v")

  else:
    raise ValueError('The Ra number should be "10k" or "1M".')

#Add the legends
ax0.legend(loc="upper left")
ax1.legend(loc="upper right")

#Save the figures
if (args.validate):
  
  fig0.savefig(f'./solution-rayleigh-uy.pdf', bbox_inches='tight')
  fig1.savefig(f'./solution-rayleigh-xv.pdf', bbox_inches='tight')

else:
  fig0.savefig(f'./solution-rayleigh-uy.png',dpi=300 , bbox_inches='tight')
  plt.show()
  fig1.savefig(f'./solution-rayleigh-xv.png',dpi=300 , bbox_inches='tight')
  plt.show()

